name: Bump Version, Create Release, and Deploy to AWS
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Create Tag, Release, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: bump
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          tag_prefix: v
          create_annotated_tag: true
          dry_run: true

      - name: Configure Git identity and push tag
        if: steps.bump.outputs.new_tag != ''
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git tag ${{ steps.bump.outputs.new_tag }} -a -m "Release ${{ steps.bump.outputs.new_tag }}"
          git push origin ${{ steps.bump.outputs.new_tag }}

      - name: Create Release
        if: steps.bump.outputs.new_tag != ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          release_name: Release ${{ steps.bump.outputs.new_tag }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      - name: Set up Node.js
        if: steps.bump.outputs.new_tag != ''
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        if: steps.bump.outputs.new_tag != ''
        run: npm install

      - name: Build the application
        if: steps.bump.outputs.new_tag != ''
        run: npm run build --if-present

      - name: Set up AWS credentials
        if: steps.bump.outputs.new_tag != ''
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to AWS Elastic Beanstalk
        if: steps.bump.outputs.new_tag != ''
        run: |
          zip -r deploy.zip . -x "*.git*"
          aws s3 cp deploy.zip s3://my-eb-bucket-darey/deploy-${{ github.sha }}.zip
          aws elasticbeanstalk create-application-version --application-name my-node-app --version-label ${{ github.sha }} --source-bundle S3Bucket="my-eb-bucket-darey",S3Key="deploy-${{ github.sha }}.zip"
          aws elasticbeanstalk update-environment --application-name my-node-app --environment-name my-node-env --version-label ${{ github.sha }}

      - name: Debug tag creation
        run: |
          echo "New tag: ${{ steps.bump.outputs.new_tag }}"
          git tag -l